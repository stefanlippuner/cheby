import time
import getpass
import sys
import cheby


def get_comment_token(language):
    # Find comment token for the given language
    comment_token_dict = {
        'verilog': '//',
        'sv': '//',
        'h': '//',  # C header file
        'vhdl': '--',
        'vhdl-orig': '--',
        'vhdl-ohwr': '--',
        'python': '#',
        'tcl': '#',
    }
    return comment_token_dict[language]


def gen_comment_header(f, header, language):
    # Generate a comment header for the given programming language

    c = get_comment_token(language)

    f.write("{} Do not edit.  Generated by cheby {} using these options:\n".format(
        c, cheby.__version__))
    f.write("{}  {}\n".format(c, " ".join(sys.argv[1:])))

    if header == 'full' or header is None:
        # getting username may fail in case of Docker containers,
        # SystemD dynamic users or sudo
        try:
            user = getpass.getuser()
        except KeyError:
            user = 'unknown'
        f.write("{} Generated on {date} by {user}\n".format(
            c, date=time.strftime("%a %b %d %X %Y"), user=user))

    f.write("\n")


def gen_comment_header_maybe(f, header, language):
    # Generate a comment header depending on the 'header' variable
    if header != 'none':
        gen_comment_header(f, header, language)


def gen_comment_header_maybe_version(f, header, language, version):
    # Generate a comment header with version identifier
    if header != 'none':
        gen_comment_header(f, header, language)
        if version is not None:
            c = get_comment_token(language)
            f.write("{c}\n{c} Version: {ver}\n".format(c=c, ver=version))
        f.write("\n")

